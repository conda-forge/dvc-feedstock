{% set name = "dvc" %}
{% set version = "1.11.7" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 044c6fcbe4e2025635c580860edb27a21cca483da0f2eb570890c2e6ca1513c6
  patches:
    - build.patch

# The "true" build is specified in the dvc-base output below.
# Of the build properties here and below:
# number is propagated into the outputs below
build:
  number: 0
  skip: true  # [py<36]

# These tests are executed for the top-level `dvc` package
test:
  requires:
    - git
  imports:
    - dvc
  commands:
    - dvc version
    - 'dvc version | grep "Supports: azure, gdrive, gs, hdfs, http, https, s3, ssh, oss"'

# DVC includes requirements-only extras to enable support for different
# remotes. Here we build a `dvc` conda package equivalent to the `dvc[all]` pip
# package, with a `dvc` base package containing dvc alone. This allows a
# happy-path of:
#
#   `conda install -c conda-forge dvc`
#
# supporting dvc and all remotes and a power-user path of:
#
#   `conda install -c conda-forge dvc-base dvc-s3`
#
# for dvc and specific remotes.
#
# Here's how it works...
#
# We define extras through "private" subpackages and a single top-level `dvc`
# metapackage. The metapackage at a given build version references the extras
# subpackages at the same build version. `dvc-base` includes the dvc package itself
# and core dependencies. `dvc-gs`, `dvc-s3`, et al contain no code, but
# reference the `dvc` base package and the requirements for that extra.
#
# Adding a new extra...
#
# Each extra needs to be added in two places:
# 1. Under a new output specifying the additional runtime requirements
# 2. Under outputs->dvc->requirements.run with a pin_subpackage directive, to
#    include it in the `dvc` metapackage
outputs:
  - name: dvc
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage("dvc-base", exact=True) }}
        - {{ pin_subpackage("dvc-gs", exact=True) }}
        - {{ pin_subpackage("dvc-gdrive", exact=True) }}
        - {{ pin_subpackage("dvc-s3", exact=True) }}
        - {{ pin_subpackage("dvc-azure", exact=True) }}
        - {{ pin_subpackage("dvc-oss", exact=True) }}
        - {{ pin_subpackage("dvc-ssh", exact=True) }}
        - {{ pin_subpackage("dvc-hdfs", exact=True) }}

  - name: dvc-base
    build:
      entry_points:
        - dvc = dvc.main:main
      script:
        - python -m pip install . --no-deps -vv

    # Base package supports dvc, but only supports built-in remotes
    test:
      requires:
        - git
      imports:
        - dvc
      commands:
        - dvc version
        - 'dvc version | grep "Supports: http, https"'

    requirements:
      host:
        - python
        - pip
      run:
        - python
        - ply >=3.9
        - colorama >=0.3.9
        - configobj >=5.0.6
        - gitpython >=2.1.8
        - dulwich >=0.20.11
        - gitdb2 >=2.0.6
        - setuptools >=34.0.0
        - nanotime >=0.5.2
        - pyasn1 >=0.4.1
        - voluptuous >=0.11.7
        - jsonpath-ng >=1.4.3
        - requests >=2.22.0
        - grandalf ==0.6
        - distro >=1.3.0
        - appdirs >=1.4.3
        - ruamel.yaml >=0.16.1
        - toml >=0.10.1
        - funcy >=1.14
        - pathspec >=0.6.0
        - shortuuid >=0.5.0
        - tqdm >=4.45.0,<5
        - packaging >=19.0
        - zc.lockfile >=1.2.1
        - flufl.lock >=3.2,<4
        - win_unicode_console >=0.5  # [win]
        - pywin32 >=225  # [win]
        - networkx >=2.1,<2.5
        - pydot >=1.2.4
        - dataclasses  # [py<37]
        - flatten-dict >=0.3.0,<1
        - tabulate >=0.8.7
        - pygtrie ==2.3.2
        - dpath >=1.4.2
        - shtab >=1.3.2,<2
        - rich >=3.0.5
        - pyparsing ==2.4.7
        - typing_extensions >=3.7.4

  - name: dvc-gs
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage("dvc-base", exact=True) }}
        - google-cloud-storage ==1.19.0

  - name: dvc-gdrive
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage("dvc-base", exact=True) }}
        - pydrive2 >=1.6.3

  - name: dvc-s3
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage("dvc-base", exact=True) }}
        - boto3 >=1.9.201

  - name: dvc-azure
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage("dvc-base", exact=True) }}
        - azure-storage-blob >=12.0
        - knack

  - name: dvc-oss
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage("dvc-base", exact=True) }}
        - oss2 >=2.11.0

  - name: dvc-ssh
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage("dvc-base", exact=True) }}
        - paramiko >=2.7.0
        # for paramiko, see https://github.com/iterative/dvc/issues/4589
        - invoke >=1.3

  - name: dvc-hdfs
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage("dvc-base", exact=True) }}
        - pyarrow >=0.17.1

  - name: dvc-webhdfs
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage("dvc-base", exact=True) }}
        - python-hdfs >=2.5.7

about:
  home: https://dvc.org/
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  summary: DVC tracks ML models and data sets

  description: |
    Data Version Control or DVC is an open-source tool for data science
    and machine learning projects.
  doc_url: https://dvc.org/doc
  dev_url: https://github.com/iterative/dvc

extra:
  recipe-maintainers:
    - shcheklein
    - efiop
    - skshetry
    # metapackage support
    - asford
